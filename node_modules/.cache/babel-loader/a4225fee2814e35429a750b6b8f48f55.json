{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Projects\\\\netflix\\\\src\\\\components\\\\accordion\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Item, Header, Inner, Body } from './styles/accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleContext = /*#__PURE__*/createContext();\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, { ...restProps,\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Accordion;\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Item = _s(function AccordionItem({ ...restProps\n}) {\n  _s();\n\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    children: /*#__PURE__*/_jsxDEV(Item, { ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}, \"tCX/VzjJ88VBg9+I9/DmKaZ9kqM=\");\nAccordion.Header = _s2(function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  _s2();\n\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    onClick: () => setToggleShow(toggleShow => !toggleShow),\n    ...restProps,\n    children: [children, toggleShow ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/close-slim.png\",\n      alt: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/add.png\",\n      alt: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}, \"TK/oZdgUDCvLrKWRR9mTHBf6KYY=\");\nAccordion.Body = _s3(function AccordionBody({\n  children,\n  ...restProps\n}) {\n  _s3();\n\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  return toggleShow ? /*#__PURE__*/_jsxDEV(Body, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this) : null;\n}, \"3GdtCldLvewOgpnz6EBMvQFgAf4=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["C:/WEBDEV/Projects/netflix/src/components/accordion/index.js"],"names":["React","useState","useContext","createContext","Container","Frame","Title","Item","Header","Inner","Body","ToggleContext","Accordion","children","restProps","AccordionTitle","AccordionItem","toggleShow","setToggleShow","AccordionHeader","AccordionBody"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,OAA3D;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,IAPF,QAQO,oBARP;;AAUA,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;AAEA,eAAe,SAASS,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAnB,EAA+C;AAC5D,sBACE,QAAC,SAAD,OAAeA,SAAf;AAAA,2BACE,QAAC,KAAD;AAAA,gBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBD,S;;AAQxBA,SAAS,CAACN,KAAV,GAAkB,SAASS,cAAT,CAAwB;AAAEF,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAoD;AACpE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACL,IAAV,MAAiB,SAASS,aAAT,CAAuB,EAAG,GAAGF;AAAN,CAAvB,EAA0C;AAAA;;AACzD,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA/B;AAAA,2BACE,QAAC,IAAD,OAAUJ,SAAV;AAAA,gBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;AAUAD,SAAS,CAACJ,MAAV,OAAmB,SAASW,eAAT,CAAyB;AAAEN,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAzB,EAAqD;AAAA;;AACtE,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgChB,UAAU,CAACS,aAAD,CAAhD;AACA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMO,aAAa,CAAED,UAAD,IAAgB,CAACA,UAAlB,CAD9B;AAAA,OAEMH,SAFN;AAAA,eAIGD,QAJH,EAKGI,UAAU,gBACT;AAAK,MAAA,GAAG,EAAC,8BAAT;AAAwC,MAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT;AAAK,MAAA,GAAG,EAAC,uBAAT;AAAiC,MAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAfD;AAiBAL,SAAS,CAACF,IAAV,OAAiB,SAASU,aAAT,CAAuB;AAAEP,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAAA;;AAClE,QAAM;AAAEG,IAAAA;AAAF,MAAiBf,UAAU,CAACS,aAAD,CAAjC;AAEA,SAAOM,UAAU,gBAAG,QAAC,IAAD,OAAUH,SAAV;AAAA,cAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAH,GAA4C,IAA7D;AACD,CAJD","sourcesContent":["import React, { useState, useContext, createContext } from 'react'\r\nimport {\r\n  Container,\r\n  Frame,\r\n  Title,\r\n  Item,\r\n  Header,\r\n  Inner,\r\n  Body,\r\n} from './styles/accordion'\r\n\r\nconst ToggleContext = createContext()\r\n\r\nexport default function Accordion({ children, ...restProps }) {\r\n  return (\r\n    <Container {...restProps}>\r\n      <Inner>{children}</Inner>\r\n    </Container>\r\n  )\r\n}\r\n\r\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\r\n  return <Title {...restProps}>{children}</Title>\r\n}\r\n\r\nAccordion.Item = function AccordionItem({  ...restProps }) {\r\n  const [toggleShow, setToggleShow] = useState(false)\r\n\r\n  return (\r\n    <ToggleContext.Provider value={{ toggleShow, setToggleShow }}>\r\n      <Item {...restProps}>{children}</Item>\r\n    </ToggleContext.Provider>\r\n  )\r\n}\r\n\r\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\r\n  const { toggleShow, setToggleShow } = useContext(ToggleContext)\r\n  return (\r\n    <Header\r\n      onClick={() => setToggleShow((toggleShow) => !toggleShow)}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n      {toggleShow ? (\r\n        <img src='/images/icons/close-slim.png' alt='Close' />\r\n      ) : (\r\n        <img src='/images/icons/add.png' alt='Open' />\r\n      )}\r\n    </Header>\r\n  )\r\n}\r\n\r\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\r\n  const { toggleShow } = useContext(ToggleContext)\r\n\r\n  return toggleShow ? <Body {...restProps}>{children}</Body> : null\r\n}\r\n"]},"metadata":{},"sourceType":"module"}